/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import Model.Application;
import Model.Observation;
import Model.VitalSignHistory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ma2017
 */
public class ViewJPanel extends javax.swing.JPanel {
    private Application application;
    DefaultTableModel viewTableModel;
    Observation selectedObservation;
    
    /**
     * Creates new form ViewJPanel
     */
    public ViewJPanel() {
        initComponents();
    }
    
    ViewJPanel(Application application){
        initComponents();
        this.application = application;
        this.viewTableModel = (DefaultTableModel) observationTable.getModel();
        displayObservations();
    }
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        observationTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        viewObservationBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        fieldObservationID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fieldTemperature = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fieldBloodPressure = new javax.swing.JTextField();
        UpdateBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        observationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Temperature", "Blood Pressure"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(observationTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 70, 380, 250));

        jLabel1.setText("View and update a vital sign");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 220, -1));

        viewObservationBtn.setText("view details");
        viewObservationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewObservationBtnActionPerformed(evt);
            }
        });
        add(viewObservationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 350, -1, -1));

        jLabel2.setText("ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 41, -1));

        fieldObservationID.setEnabled(false);
        add(fieldObservationID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 70, 100, -1));

        jLabel3.setText("Temperature");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        fieldTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldTemperatureActionPerformed(evt);
            }
        });
        add(fieldTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 100, -1));

        jLabel4.setText("Blood Pressure");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, -1));
        add(fieldBloodPressure, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 100, -1));

        UpdateBtn.setText("Update Observation");
        UpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBtnActionPerformed(evt);
            }
        });
        add(UpdateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void fieldTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldTemperatureActionPerformed
//        if (!fieldObservationID.getText().isEmpty()){
//            Observation o = this.application.getHistory().findOservation(Integer.valueOf(fieldObservationID.getText()));
//            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
//            o.setTemperature(Double.valueOf(fieldTemperature.getText()));
//            
//            this.selectedObservation.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
//            this.selectedObservation.setTemperature(Double.valueOf(fieldTemperature.getText()));
//        }else{
//            JOptionPane.showMessageDialog(null,"you have not made any selected");
//        }
      
        
    }//GEN-LAST:event_fieldTemperatureActionPerformed

    private void UpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBtnActionPerformed
        if(!fieldObservationID.getText().isEmpty()){
            Observation o = this.application.getHistory().findObservation(Integer.valueOf(fieldObservationID.getText()));
            o.setBloodPressure(Double.valueOf(fieldBloodPressure.getText()));
            o.setTemperature(Double.valueOf(fieldTemperature.getText()));
            
        }else{
            JOptionPane.showMessageDialog(null,"you have not made and selection");
        }
        
        displayObservations();


    }//GEN-LAST:event_UpdateBtnActionPerformed

    private void viewObservationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewObservationBtnActionPerformed
        // get the row int the table
        int selectedRow = observationTable.getSelectedRow();
        if(selectedRow>=0){
            this.selectedObservation = (Observation)observationTable.getValueAt(selectedRow,0);
            fieldObservationID.setText(String.valueOf(this.selectedObservation.getObservationId()));
            fieldBloodPressure.setText(String.valueOf(this.selectedObservation.getBloodPressure()));
            fieldTemperature.setText(String.valueOf(this.selectedObservation.getTemperature()));
        }else{
            JOptionPane.showMessageDialog(null,"please select a row");
        }
        
    }//GEN-LAST:event_viewObservationBtnActionPerformed
    public void displayObservations(){
        VitalSignHistory history = this.application.getHistory();
        viewTableModel.setRowCount(0);
        if(history.getVitalSignHistory().size()>0){
            for(Observation o : history.getVitalSignHistory()){
                Object row[] = new Object[3];
                row[0]=o;
                row[1]=o.getTemperature();
                row[2]=o.getBloodPressure();
                
                viewTableModel.addRow(row);
            }
        }else{
            System.out.print("Empty list");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JTextField fieldBloodPressure;
    private javax.swing.JTextField fieldObservationID;
    private javax.swing.JTextField fieldTemperature;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable observationTable;
    private javax.swing.JButton viewObservationBtn;
    // End of variables declaration//GEN-END:variables
}
